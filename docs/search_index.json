[
["random-walks.html", "Chapter 3 Random Walks", " Chapter 3 Random Walks library(tidyverse) T &lt;- 15 nsim &lt;-3 single &lt;- function(T) { dx = sample(c(-1,1), replace = TRUE, T) return(c(0,cumsum(dx))) } S = data.frame(t(replicate(nsim, single(T)))) variable_name_X &lt;- function(i){ paste(&quot;X&quot;,toString(i),sep=&quot;&quot;) } variable_name_i &lt;- function(i) return(i) colnames(S) = lapply(0:T, variable_name_i) S$omega = rownames(S) # this way it is a &lt;chr&gt; and that is good!, makes it a factor library(tidyverse) # put it is long form for plotting L = S %&gt;% pivot_longer(-omega, names_to = &quot;t&quot;, values_to = &quot;X&quot;) L$t = as.numeric(L$t) # because columns names become characters L$X = L$X + rnorm(length(L$X), sd = 0.0) # jitter library(plotly) L %&gt;% plot_ly(x=~t, y=~X, color=~omega) %&gt;% config(displayModeBar = FALSE) %&gt;% add_trace(type=&quot;scatter&quot;,mode = &quot;markers+lines&quot;, hovertemplate = &quot;X_{%{x}} = %{y}&lt;extra&gt;&lt;/extra&gt;&quot;) %&gt;% layout(title = &quot;Several trajectories&quot;, xaxis = list(#range = c(-1.01,1.01), showgrid = T, zeroline = T, visible = T), yaxis = list(#range = c(-1.01,1.01), showgrid = T, zeroline = T, visible = T, scaleanchor = &quot;x&quot;, scaleratio = 1) ) #R&gt; Warning: `arrange_()` is deprecated as of dplyr 0.7.0. #R&gt; Please use `arrange()` instead. #R&gt; See vignette(&#39;programming&#39;) for more help #R&gt; This warning is displayed once every 8 hours. #R&gt; Call `lifecycle::last_warnings()` to see where this warning was generated. nsim = 100 L = data.frame(x = runif(min = -1, max = 1, nsim), y=runif(min = -1, max = 1, nsim)) L$omega = as.numeric(rownames(L)) L$inside = (L$x)^2+(L$y)^2 &lt; 1 accumulate_by &lt;- function(dat, var) { var &lt;- lazyeval::f_eval(var, dat) lvls &lt;- plotly:::getLevels(var) dats &lt;- lapply(seq_along(lvls), function(x) { cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]]) }) dplyr::bind_rows(dats) } fL = L %&gt;% accumulate_by(~omega) fL %&gt;% plot_ly(x=~x, y=~y, color=~as.numeric(inside), colors = c(&quot;red&quot;, &quot;darkgreen&quot;), hovertemplate = &quot;&quot;) %&gt;% add_markers(size=I(20), hoverinfo = FALSE, frame = ~frame, showlegend = FALSE) %&gt;% hide_colorbar %&gt;% layout(xaxis = list(range = c(-1.01,1.01), showgrid = F, zeroline = F, visible = F), yaxis = list(range = c(-1.01,1.01), showgrid = F, zeroline = F, visible = F, scaleanchor = &quot;x&quot;, scaleratio = 1), shapes = list( list(type = &#39;rectangle&#39;, xref = &#39;x&#39;, x0 = -1, x1 = 1, yref = &#39;y&#39;, y0 = -1, y1 = 1, line = list(color = &#39;rgb(200,200,200)&#39;) ), list(type = &#39;circle&#39;, xref = &#39;x&#39;, x0 = -1, x1 = 1, yref = &#39;y&#39;, y0 = -1, y1 = 1, line = list(color = &#39;rgb(0,0,0)&#39;) ) ) ) %&gt;% config(displayModeBar = FALSE) %&gt;% animation_opts(50, redraw = TRUE, easing = &quot;elastic&quot;, mode = &quot;immediate&quot; ) #R&gt; Warning: `arrange_()` is deprecated as of dplyr 0.7.0. #R&gt; Please use `arrange()` instead. #R&gt; See vignette(&#39;programming&#39;) for more help #R&gt; This warning is displayed once every 8 hours. #R&gt; Call `lifecycle::last_warnings()` to see where this warning was generated. library(ggplot2) library(gganimate) #R&gt; Warning: package &#39;gganimate&#39; was built under R version 3.6.2 theme_set(theme_bw()) library(gapminder) head(gapminder) #R&gt; # A tibble: 6 x 6 #R&gt; country continent year lifeExp pop gdpPercap #R&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; #R&gt; 1 Afghanistan Asia 1952 28.8 8425333 779. #R&gt; 2 Afghanistan Asia 1957 30.3 9240934 821. #R&gt; 3 Afghanistan Asia 1962 32.0 10267083 853. #R&gt; 4 Afghanistan Asia 1967 34.0 11537966 836. #R&gt; # â€¦ with 2 more rows p &lt;- ggplot( gapminder, aes(x = gdpPercap, y=lifeExp, size = pop, colour = country) ) + geom_point(show.legend = FALSE, alpha = 0.7) + scale_color_viridis_d() + scale_size(range = c(2, 12)) + scale_x_log10() + labs(x = &quot;GDP per capita&quot;, y = &quot;Life expectancy&quot;) p + transition_time(year) + labs(title = &quot;Year: {frame_time}&quot;) "]
]
